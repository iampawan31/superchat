{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","method","type","value","onChange","target","props","messageClass","className","src","alt","SignOut","signOut","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YAgB3B,SAASC,IAMP,OAAO,wBAAQC,QALU,WACvB,IAAMC,EAAW,IAAId,IAASU,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAGhB,iCAGT,SAASG,IACP,IAAMC,EAAQC,mBACRC,EAAcT,EAAUU,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAHnC,EAICC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAJW,sBAKgBC,mBAAS,IALzB,mBAKXC,EALW,KAKAC,EALA,KAOZC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQxB,EAAKyB,YAAvBC,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAWxC,IAASW,UAAU8B,WAAWC,kBACzCN,MACAC,aATgB,OAYlBP,EAAa,IACbZ,EAAMyB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAgBjB,OACE,qCACE,iCACGlB,GACCA,EAASmB,KAAI,SAACC,GACZ,OAAO,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEjC,sBAAMC,IAAKjC,OAGb,uBAAMkC,SAAUrB,EAAasB,OAAO,OAApC,UACE,uBACEC,KAAK,OACLC,MAAO1B,EACP2B,SAAU,SAACxB,GAAD,OAAOF,EAAaE,EAAEyB,OAAOF,UAEzC,wBAAQD,KAAK,SAAb,wBAMR,SAASN,EAAYU,GAAQ,IAAD,EACMA,EAAMT,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SACbsB,EAAevB,IAAQ1B,EAAKyB,YAAYC,IAAM,OAAS,WAE7D,OACE,sBAAKwB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKxB,EAAUyB,IAAI,KACxB,4BAAIvB,OAKV,SAASwB,IACP,OACErD,EAAKyB,aAAe,wBAAQtB,QAAS,kBAAMH,EAAKsD,WAA5B,sBAITC,MAvFf,WAAgB,IAAD,EACEC,YAAaxD,GAArByD,EADM,oBAGb,OACE,sBAAKP,UAAU,MAAf,UACE,mCACE,sEACA,cAACG,EAAD,OAGF,kCAAUI,EAAO,cAAClD,EAAD,IAAe,cAACL,EAAD,UC5BtCwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f8d56f6.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAtjWP2CY9elGMTVXmPKU06FZz46H0krMY',\n  authDomain: 'superchat-520c4.firebaseapp.com',\n  databaseURL: 'https://superchat-520c4.firebaseio.com',\n  projectId: 'superchat-520c4',\n  storageBucket: 'superchat-520c4.appspot.com',\n  messagingSenderId: '449865172462',\n  appId: '1:449865172462:web:25fc64cb354a386ebd7aff',\n  measurementId: 'G-NZCXBFBKV8',\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>‚öõÔ∏èüî•üí¨</h1>\n        <SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return <button onClick={signInWithGoogle}>Sign in with Google</button>;\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <>\n      <main>\n        {messages &&\n          messages.map((msg) => {\n            return <ChatMessage key={msg.id} message={msg} />;\n          })}\n        <span ref={dummy}></span>\n      </main>\n\n      <form onSubmit={sendMessage} method=\"post\">\n        <input\n          type=\"text\"\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt=\"\" />\n      <p>{text}</p>\n    </div>\n  );\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && <button onClick={() => auth.signOut()}>Sign Out</button>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}